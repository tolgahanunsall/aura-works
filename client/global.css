/** @import must precede all other statements */
@import url("https://fonts.googleapis.com/css2?family=Reckless+Neue:wght@400&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /**
   * Tailwind CSS theme
   * tailwind.config.ts expects the following color variables to be expressed as HSL values.
   * A different format will require also updating the theme in tailwind.config.ts.
  */
  :root {
    --background: 222 40% 11%;
    --foreground: 0 0% 95%;

    --card: 222 30% 13%;
    --card-foreground: 0 0% 95%;

    --popover: 222 30% 13%;
    --popover-foreground: 0 0% 95%;

    --primary: 200 100% 42%;
    --primary-foreground: 0 0% 100%;

    --secondary: 25 95% 50%;
    --secondary-foreground: 222 40% 11%;

    --muted: 222 30% 30%;
    --muted-foreground: 0 0% 60%;

    --accent: 200 100% 50%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 222 35% 25%;
    --input: 222 35% 20%;
    --ring: 200 100% 50%;

    --radius: 0.75rem;

    --sidebar-background: 222 40% 11%;

    --sidebar-foreground: 0 0% 95%;

    --sidebar-primary: 200 100% 42%;

    --sidebar-primary-foreground: 0 0% 100%;

    --sidebar-accent: 25 95% 50%;

    --sidebar-accent-foreground: 222 40% 11%;

    --sidebar-border: 222 35% 25%;

    --sidebar-ring: 200 100% 50%;
  }

  .dark {
    --background: 222 40% 11%;
    --foreground: 0 0% 95%;

    --card: 222 30% 13%;
    --card-foreground: 0 0% 95%;

    --popover: 222 30% 13%;
    --popover-foreground: 0 0% 95%;

    --primary: 200 100% 42%;
    --primary-foreground: 0 0% 100%;

    --secondary: 25 95% 50%;
    --secondary-foreground: 222 40% 11%;

    --muted: 222 30% 30%;
    --muted-foreground: 0 0% 60%;

    --accent: 200 100% 50%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 222 35% 25%;
    --input: 222 35% 20%;
    --ring: 200 100% 50%;

    --sidebar-background: 222 40% 11%;
    --sidebar-foreground: 0 0% 95%;
    --sidebar-primary: 200 100% 42%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 25 95% 50%;
    --sidebar-accent-foreground: 222 40% 11%;
    --sidebar-border: 222 35% 25%;
    --sidebar-ring: 200 100% 50%;
  }
}

@layer components {
  /* Modern Animated Button Style - Preserves existing colors */
  button, .btn, [role="button"] {
    position: relative;
    font-family: inherit;
    font-weight: 500;
    letter-spacing: 0.05em;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    border-radius: 0.9em;
    border: none;
    overflow: hidden;
    cursor: pointer;
    transition: all 0.3s ease;
    padding: 0.7em 1.2em;
  }

  /* Primary buttons with animated icon effect */
  button.bg-primary, .btn.bg-primary {
    background: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
    box-shadow: inset 0 0 1.6em -0.6em hsl(var(--primary) / 0.6);
  }

  button.bg-primary:hover {
    box-shadow: inset 0 0 2em -0.4em hsl(var(--primary) / 0.8), 
                0 0.2em 0.8em hsl(var(--primary) / 0.3);
    transform: translateY(-2px);
  }

  button.bg-primary:active {
    transform: translateY(0);
    box-shadow: inset 0 0 1.6em -0.6em hsl(var(--primary) / 0.6);
  }

  /* Secondary/Accent buttons */
  button.bg-secondary, button.bg-accent, .btn.bg-secondary, .btn.bg-accent {
    background: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
    box-shadow: inset 0 0 1.6em -0.6em hsl(var(--accent) / 0.6);
  }

  button.bg-secondary:hover, button.bg-accent:hover {
    box-shadow: inset 0 0 2em -0.4em hsl(var(--accent) / 0.8),
                0 0.2em 0.8em hsl(var(--accent) / 0.3);
    transform: translateY(-2px);
  }

  button.bg-secondary:active, button.bg-accent:active {
    transform: translateY(0);
    box-shadow: inset 0 0 1.6em -0.6em hsl(var(--accent) / 0.6);
  }

  /* Icon styling inside buttons */
  button svg, .btn svg {
    transition: transform 0.3s ease;
    flex-shrink: 0;
  }

  button:hover svg, .btn:hover svg {
    transform: translateX(0.2em);
  }

  /* Outline variant buttons */
  button[class*="outline"], .btn[class*="outline"] {
    background: transparent;
    border: 2px solid currentColor;
    box-shadow: none;
  }

  button[class*="outline"]:hover {
    background: hsl(var(--primary) / 0.1);
    transform: translateY(-2px);
    box-shadow: 0 0.2em 0.8em hsl(var(--primary) / 0.2);
  }

  /* Ghost/Link variant buttons */
  button[class*="ghost"], button[class*="link"], .btn[class*="ghost"], .btn[class*="link"] {
    background: transparent;
    box-shadow: none;
  }

  button[class*="ghost"]:hover, button[class*="link"]:hover {
    background: hsl(var(--primary) / 0.1);
    transform: none;
  }

  /* Custom .btn-3d class for special buttons */
  .btn-3d {
    position: relative;
    display: inline-block;
    cursor: pointer;
    outline: none;
    border: 0;
    vertical-align: middle;
    text-decoration: none;
    font-family: inherit;
    font-size: 15px;
    font-weight: 600;
    padding: 1em 2em;
    border-radius: 0.75em;
    transform-style: preserve-3d;
    transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), background 150ms cubic-bezier(0, 0, 0.58, 1);
  }

  .btn-3d::before {
    position: absolute;
    content: '';
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    transform: translate3d(0, 0.5em, -1em);
    transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), box-shadow 150ms cubic-bezier(0, 0, 0.58, 1);
    z-index: -1;
  }

  .btn-3d:hover {
    transform: translate(0, 0.15em);
  }

  .btn-3d:hover::before {
    transform: translate3d(0, 0.35em, -1em);
  }

  .btn-3d:active {
    transform: translate(0, 0.5em);
  }

  .btn-3d:active::before {
    transform: translate3d(0, 0, -1em);
  }
}

/* CSS processed by PostCSS/Tailwind CSS - @apply directives are valid */
@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    background-image:
      radial-gradient(circle at 19% 9%, rgba(11, 73, 106, 0.4) 0%, transparent 50%),
      radial-gradient(circle at 98% 98%, rgba(244, 95, 21, 0.15) 0%, transparent 50%),
      radial-gradient(circle at 93% 21%, rgba(9, 54, 78, 0.3) 0%, transparent 50%),
      radial-gradient(circle at 6% 91%, rgba(9, 54, 78, 0.25) 0%, transparent 50%);
    background-attachment: fixed;
  }

  :where(p, span, li, h1, h2, h3, h4, h5, h6, a, button, label, td, th) {
    overflow-wrap: anywhere;
    word-break: break-word;
  }

  pre,
  code {
    overflow-x: auto;
    white-space: pre;
  }
}
